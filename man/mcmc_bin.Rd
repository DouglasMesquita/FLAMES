% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mcmc_bin.R
\name{mcmc_bin}
\alias{mcmc_bin}
\title{MCMC for binary regression}
\usage{
mcmc_bin(data, formula, nsim = 1000, burnin = round(0.1 * nsim),
  lag = 10, type = "logit", sample_c = TRUE, sigma_beta = 100,
  mean_c = 0.5, sd_c = 0.45, a_lambda = 0.01, b_lambda = 0.99,
  var_df = 0.6, var_c = 0.4, var_lambda = 2.4, bound_beta = c(-10,
  10), method = "ARMS", const = 1)
}
\arguments{
\item{data}{Dataset to be used}

\item{formula}{Simple formula}

\item{nsim}{Sample size required for MCMC}

\item{burnin}{Burn in for MCMC}

\item{lag}{Lag for MCMC}

\item{type}{"logit", "probit", "cauchit", "robit" or "cloglog"}

\item{sample_c}{Should c be sampled?}

\item{sigma_beta}{Variance of beta prior}

\item{mean_c}{Mean for c a priori}

\item{sd_c}{Standard deviation for c a priori}

\item{a_lambda}{Inferior limit for lambda}

\item{b_lambda}{Superior limit for lambda}

\item{var_df}{Variance to sample log(df)}

\item{var_c}{Variance to sample c}

\item{var_lambda}{Variance to sample lambda}

\item{bound_beta}{Limits to sample beta for ARMS}

\item{method}{"metropolis" or "ARMS"}

\item{const}{A constant to help on sampling degrees of freedom \eqn{\tilde{df} = df/c}}
}
\value{
Chains of all parameters
}
\description{
MCMC for binary regression
}
\examples{
\dontrun{
 set.seed(1)

 ##-- Data ----
 n <- 1000
 n_cov <- 2

 ##-- Covariates
 X <- matrix(rnorm(n*n_cov), ncol = n_cov)

 ##-- Coefficients
 betas <- c(-1, 0.5)
 XBeta <- X\%*\%betas

 ##-- c parameter
 c1 <- 0.2
 c2 <- 1 - c1

 type_data = "robit"
 df <- 10

 ##-- p and y
 p <- robit:::inv_link(x = XBeta, type = type_data, df = df)*c2 + c1
 y <- rbinom(n = n, size = 1, prob = p)

 bd <- data.frame(y = y, X)

 ##-- Hyperparameters (prioris)
 sigma_beta <- 100

 mean_c <- 0.5
 sd_c <- 0.45

 a_lambda <- 0.01
 b_lambda <- 1.00

 ##-- MCMC
 nsim <- 1000
 burnin <- 5000
 lag <- 10

 type <- "robit"
 bound_beta <- c(-10, 10)
 var_df <- 0.5

 f <- y ~ X1 + X2

 ##-- ARMS ~ 3 minutes
 out_arms <- mcmc_bin(data = bd, formula = f,
                     nsim = nsim, burnin = burnin, lag = lag,
                     type = type, sample_c = TRUE,
                     sigma_beta = sigma_beta, mean_c = mean_c, sd_c = sd_c,
                     a_lambda = a_lambda, b_lambda = b_lambda,
                     var_df = var_df, bound_beta = bound_beta,
                     method = "ARMS", const = 50)

 ##-- ARMS ~ 45 seconds
 out_met <- mcmc_bin(data = bd, formula = f,
                    nsim = nsim, burnin = burnin, lag = lag,
                    type = type, sample_c = TRUE,
                    sigma_beta = sigma_beta, mean_c = mean_c, sd_c = sd_c,
                    a_lambda = a_lambda, b_lambda = b_lambda,
                    var_df = var_df, bound_beta = bound_beta,
                    method = "metropolis", const = 50)

 ##-- GLM
 out_glm <- glm(formula = f, data = bd, family = "binomial")

 summary(out_glm)
 summary(out_arms)
 summary(out_met)

 coef(out_glm)
 coef(out_arms)
 coef(out_met)
 betas

 plot(out_arms, ask = T)
 plot(out_met, ask = T)
}

}
